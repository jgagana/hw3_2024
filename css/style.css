html{
  scroll-behavior: smooth;
}

body{
  background-color: #737373;
  font-size: 18px;
  line-height: 1.15;
  margin: 0;
  padding: 0;
}

.overview {
  grid-column: 1 / -1; 
  background-image: url('images/header.jpg'); 
  background-attachment: fixed; 
  background-position: center; 
  background-repeat: no-repeat; 
  background-size: cover; 
  color: white; 
  height: 400px; 
  text-align: center; 
  padding: 50px 20px;
}

.overview img {
  width: 100%; 
  height: 400px; 
  object-fit: cover; 
  position: absolute; 
  top: 0;
  left: 0;
  z-index: -1; 
}

.overview p{
  color: white;
  font-size: 24px;
  padding: 0 100px;
  text-align: center;
}

h1{
  font-size: 50px;
  line-height: 1;
  padding: 50px 0;
  text-align: center;
}

h2{
  font-size: 32px;
  line-height: 1.5;
}

nav li{
  display:inline;
  padding-right:20px;
}

nav a{
  color: black;
  font-weight: bold;
  text-decoration: none; 
}

nav{
  background-color: #ddd;
  padding: 25px 0; 
  text-align: left;
}

footer{
  background-color: black;
  color: white;
  padding-top: 30px;
  text-align: center;
}

.text-block{
  background-color: rgba(255, 255, 255, .8);
  border: 10px solid black;
  padding: 30px;
  margin-bottom: 30px;
  z-index: 1;
  position: relative;
}

/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/

nav a:hover,
nav a:focus {
  text-decoration: underline;
  outline: none; 
}

/* Step 2a: Write selector/rule property to position the default position for the skip class element*/

.skip a {
  position: absolute;
  top: -40px; /* Hide above the screen */
  left: 0;
  background-color: white;
  padding: 6px;
  transition: top 0.3s ease-out;
  z-index: 1;
}

/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/

.skip a:focus {
  top: 20px; /* Move into view */
  outline: 2px solid black; /* Visible focus */
}

/* Step 3: Write selector/rule property to style all elements when in focus*/

:focus {
  border: 2px solid black;
}

/* Step 4: Write selector/rule property to style the container */

.container {
  display: grid;
  grid-template-columns: 1fr 5fr 1fr;
  grid-gap: 15px;
  max-width: 1200px;
  margin: 0 auto;
}

/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid and place it in the grid. */


/* Steps 6 and 7: Write the selector/rule properties to place the next elements in the next
four rows in the grid. */

.about,
.method,
.clients,
.contact {
  grid-column: 2 / span 1; /* Start in second column and span 1 column */
}

.about-image,
.method-image,
.clients-image,
.contact-image {
  grid-column: 1 / -1; /* Cover all columns */
  max-height: 600px;
  overflow: hidden; /* Hide overflow content */
}

/* Step 8: Write the selector/rule property to style the .text-block class. */

.text-block {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 20px;
  margin-bottom: 30px;
}

/* Add your media query here */

@media (min-width: 800px) {

  nav {
    padding: 30px 0;
    text-align: right;
  }

  nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  nav li {
    display: inline;
    padding-right: 20px;
  }

  nav a {
    color: black;
    font-weight: bold;
    text-decoration: none;
  }

  /* Step 10: Adjust grid columns for larger screens */
  .container {
    grid-template-columns: 50px auto 500px auto 50px; /* Five columns */
    grid-gap: 20px;
  }

  /* Step 11 and 12: Update grid layout for larger screens */
  .about,
  .clients,
  .method,
  .contact {
    grid-column: 3 / span 2; /* Span two columns */
  }

  .about-image,
  .method-image,
  .clients-image,
  .contact-image {
    grid-column: 2 / span 2; /* Span two columns for images */
  }

  /* Step 13: Ensure text-block does not overflow */
  .text-block {
    max-height: 250px;
    overflow: hidden;
  }
}